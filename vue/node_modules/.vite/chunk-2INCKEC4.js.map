{
  "version": 3,
  "sources": ["../@cosmjs/encoding/src/ascii.ts", "../@cosmjs/encoding/src/base64.ts", "../bech32/index.js", "../@cosmjs/encoding/src/bech32.ts", "../@cosmjs/encoding/src/hex.ts", "../@cosmjs/encoding/src/rfc3339.ts", "../@cosmjs/encoding/src/utf8.ts", "../@cosmjs/encoding/src/index.ts"],
  "sourcesContent": [null, null, "'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n", null, null, null, null, null],
  "mappings": "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",
  "names": []
}
