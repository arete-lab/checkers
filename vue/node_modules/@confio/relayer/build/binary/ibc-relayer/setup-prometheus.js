"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.setupPrometheus = void 0;
const http_1 = __importDefault(require("http"));
const prom_client_1 = __importDefault(require("prom-client"));
let initialized = false;
const prefix = 'relayer';
const withPrefix = (name) => `${prefix}_${name}`;
function getMetrics() {
    return {
        loopTotal: new prom_client_1.default.Counter({
            name: withPrefix('loop_total'),
            help: 'Total relayer loops.',
        }),
    };
}
function setupPrometheus({ enabled, port, logger, }) {
    if (initialized) {
        throw new Error(`"setupPrometheus" func shouldn't be initialized more than once.`);
    }
    initialized = true;
    if (!enabled) {
        return null;
    }
    prom_client_1.default.collectDefaultMetrics({ prefix: `${prefix}_` });
    const server = http_1.default.createServer((request, response) => __awaiter(this, void 0, void 0, function* () {
        if (request.method === 'GET' && request.url === '/metrics') {
            const metrics = yield prom_client_1.default.register.metrics();
            response.writeHead(200, {
                'Content-Type': prom_client_1.default.register.contentType,
            });
            response.end(metrics);
            return;
        }
        response.writeHead(404);
        response.end('404');
    }));
    server.listen(port);
    logger.info(`Prometheus GET /metrics exposed on port ${port}.`);
    return getMetrics();
}
exports.setupPrometheus = setupPrometheus;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0dXAtcHJvbWV0aGV1cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9iaW5hcnkvaWJjLXJlbGF5ZXIvc2V0dXAtcHJvbWV0aGV1cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQSxnREFBd0I7QUFFeEIsOERBQWlDO0FBSWpDLElBQUksV0FBVyxHQUFHLEtBQUssQ0FBQztBQUV4QixNQUFNLE1BQU0sR0FBRyxTQUFTLENBQUM7QUFDekIsTUFBTSxVQUFVLEdBQUcsQ0FBQyxJQUFZLEVBQUUsRUFBRSxDQUFDLEdBQUcsTUFBTSxJQUFJLElBQUksRUFBRSxDQUFDO0FBRXpELFNBQVMsVUFBVTtJQUNqQixPQUFPO1FBQ0wsU0FBUyxFQUFFLElBQUkscUJBQU0sQ0FBQyxPQUFPLENBQUM7WUFDNUIsSUFBSSxFQUFFLFVBQVUsQ0FBQyxZQUFZLENBQUM7WUFDOUIsSUFBSSxFQUFFLHNCQUFzQjtTQUM3QixDQUFDO0tBQ0gsQ0FBQztBQUNKLENBQUM7QUFLRCxTQUFnQixlQUFlLENBQUMsRUFDOUIsT0FBTyxFQUNQLElBQUksRUFDSixNQUFNLEdBS1A7SUFDQyxJQUFJLFdBQVcsRUFBRTtRQUNmLE1BQU0sSUFBSSxLQUFLLENBQ2IsaUVBQWlFLENBQ2xFLENBQUM7S0FDSDtJQUNELFdBQVcsR0FBRyxJQUFJLENBQUM7SUFFbkIsSUFBSSxDQUFDLE9BQU8sRUFBRTtRQUNaLE9BQU8sSUFBSSxDQUFDO0tBQ2I7SUFFRCxxQkFBTSxDQUFDLHFCQUFxQixDQUFDLEVBQUUsTUFBTSxFQUFFLEdBQUcsTUFBTSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZELE1BQU0sTUFBTSxHQUFHLGNBQUksQ0FBQyxZQUFZLENBQUMsQ0FBTyxPQUFPLEVBQUUsUUFBUSxFQUFFLEVBQUU7UUFDM0QsSUFBSSxPQUFPLENBQUMsTUFBTSxLQUFLLEtBQUssSUFBSSxPQUFPLENBQUMsR0FBRyxLQUFLLFVBQVUsRUFBRTtZQUMxRCxNQUFNLE9BQU8sR0FBRyxNQUFNLHFCQUFNLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQ2hELFFBQVEsQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFO2dCQUN0QixjQUFjLEVBQUUscUJBQU0sQ0FBQyxRQUFRLENBQUMsV0FBVzthQUM1QyxDQUFDLENBQUM7WUFDSCxRQUFRLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBRXRCLE9BQU87U0FDUjtRQUVELFFBQVEsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDeEIsUUFBUSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN0QixDQUFDLENBQUEsQ0FBQyxDQUFDO0lBQ0gsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNwQixNQUFNLENBQUMsSUFBSSxDQUFDLDJDQUEyQyxJQUFJLEdBQUcsQ0FBQyxDQUFDO0lBRWhFLE9BQU8sVUFBVSxFQUFFLENBQUM7QUFDdEIsQ0FBQztBQXZDRCwwQ0F1Q0MifQ==