"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.run = exports.keysGenerate = void 0;
const fs_1 = __importDefault(require("fs"));
const generate_mnemonic_1 = require("../../utils/generate-mnemonic");
const resolve_option_1 = require("../../utils/options/resolve-option");
function keysGenerate(flags, _logger) {
    return __awaiter(this, void 0, void 0, function* () {
        const options = {
            keyFile: resolve_option_1.resolveOption('keyFile')(flags.keyFile, process.env.RELAYER_KEY_FILE),
        };
        yield run(options);
    });
}
exports.keysGenerate = keysGenerate;
function run(options) {
    const mnemonic = generate_mnemonic_1.generateMnemonic();
    if (options.keyFile) {
        fs_1.default.writeFileSync(options.keyFile, mnemonic, 'utf-8');
        console.log(`Saved mnemonic to ${options.keyFile}`);
        return;
    }
    console.log(mnemonic);
}
exports.run = run;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2V5cy1nZW5lcmF0ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9iaW5hcnkvaWJjLXNldHVwL2NvbW1hbmRzL2tleXMtZ2VuZXJhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsNENBQW9CO0FBR3BCLHFFQUFpRTtBQUNqRSx1RUFBbUU7QUFVbkUsU0FBc0IsWUFBWSxDQUFDLEtBQVksRUFBRSxPQUFlOztRQUM5RCxNQUFNLE9BQU8sR0FBRztZQUNkLE9BQU8sRUFBRSw4QkFBYSxDQUFDLFNBQVMsQ0FBQyxDQUMvQixLQUFLLENBQUMsT0FBTyxFQUNiLE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQzdCO1NBQ0YsQ0FBQztRQUVGLE1BQU0sR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3JCLENBQUM7Q0FBQTtBQVRELG9DQVNDO0FBRUQsU0FBZ0IsR0FBRyxDQUFDLE9BQWdCO0lBQ2xDLE1BQU0sUUFBUSxHQUFHLG9DQUFnQixFQUFFLENBQUM7SUFFcEMsSUFBSSxPQUFPLENBQUMsT0FBTyxFQUFFO1FBQ25CLFlBQUUsQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxRQUFRLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDckQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7UUFDcEQsT0FBTztLQUNSO0lBRUQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUN4QixDQUFDO0FBVkQsa0JBVUMifQ==