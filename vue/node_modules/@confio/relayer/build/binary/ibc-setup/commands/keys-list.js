"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.run = exports.getAddresses = exports.keysList = void 0;
const os_1 = __importDefault(require("os"));
const path_1 = __importDefault(require("path"));
const constants_1 = require("../../constants");
const derive_address_1 = require("../../utils/derive-address");
const load_and_validate_app_1 = require("../../utils/load-and-validate-app");
const load_and_validate_registry_1 = require("../../utils/load-and-validate-registry");
const resolve_home_option_1 = require("../../utils/options/shared/resolve-home-option");
const resolve_key_file_option_1 = require("../../utils/options/shared/resolve-key-file-option");
const resolve_mnemonic_option_1 = require("../../utils/options/shared/resolve-mnemonic-option");
function keysList(flags, _logger) {
    return __awaiter(this, void 0, void 0, function* () {
        const home = resolve_home_option_1.resolveHomeOption({ homeFlag: flags.home });
        const app = load_and_validate_app_1.loadAndValidateApp(home);
        const keyFile = resolve_key_file_option_1.resolveKeyFileOption({ keyFileFlag: flags.keyFile, app });
        const mnemonic = yield resolve_mnemonic_option_1.resolveMnemonicOption({
            interactiveFlag: flags.interactive,
            mnemonicFlag: flags.mnemonic,
            keyFile,
            app,
        });
        const options = {
            home,
            mnemonic,
        };
        yield run(options);
    });
}
exports.keysList = keysList;
function getAddresses(registryChains, mnemonic) {
    return __awaiter(this, void 0, void 0, function* () {
        const chains = Object.entries(registryChains);
        return (yield Promise.all(chains.map(([, data]) => derive_address_1.deriveAddress(mnemonic, data.prefix, data.hd_path)))).map((address, index) => [chains[index][0], chains[index][1], address]);
    });
}
exports.getAddresses = getAddresses;
function run(options) {
    return __awaiter(this, void 0, void 0, function* () {
        const registryFilePath = path_1.default.join(options.home, constants_1.registryFile);
        const registry = load_and_validate_registry_1.loadAndValidateRegistry(registryFilePath);
        const addresses = (yield getAddresses(registry.chains, options.mnemonic))
            .map(([chain, , address]) => `${chain}: ${address}`)
            .join(os_1.default.EOL);
        console.log(addresses);
    });
}
exports.run = run;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2V5cy1saXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2JpbmFyeS9pYmMtc2V0dXAvY29tbWFuZHMva2V5cy1saXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDRDQUFvQjtBQUNwQixnREFBd0I7QUFFeEIsK0NBQStDO0FBRy9DLCtEQUEyRDtBQUMzRCw2RUFBdUU7QUFDdkUsdUZBQWlGO0FBQ2pGLHdGQUFtRjtBQUNuRixnR0FBMEY7QUFDMUYsZ0dBQTJGO0FBYzNGLFNBQXNCLFFBQVEsQ0FBQyxLQUFZLEVBQUUsT0FBZTs7UUFDMUQsTUFBTSxJQUFJLEdBQUcsdUNBQWlCLENBQUMsRUFBRSxRQUFRLEVBQUUsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7UUFDekQsTUFBTSxHQUFHLEdBQUcsMENBQWtCLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckMsTUFBTSxPQUFPLEdBQUcsOENBQW9CLENBQUMsRUFBRSxXQUFXLEVBQUUsS0FBSyxDQUFDLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBQzFFLE1BQU0sUUFBUSxHQUFHLE1BQU0sK0NBQXFCLENBQUM7WUFDM0MsZUFBZSxFQUFFLEtBQUssQ0FBQyxXQUFXO1lBQ2xDLFlBQVksRUFBRSxLQUFLLENBQUMsUUFBUTtZQUM1QixPQUFPO1lBQ1AsR0FBRztTQUNKLENBQUMsQ0FBQztRQUVILE1BQU0sT0FBTyxHQUFZO1lBQ3ZCLElBQUk7WUFDSixRQUFRO1NBQ1QsQ0FBQztRQUVGLE1BQU0sR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3JCLENBQUM7Q0FBQTtBQWpCRCw0QkFpQkM7QUFFRCxTQUFzQixZQUFZLENBQ2hDLGNBQXFDLEVBQ3JDLFFBQWdCOztRQUVoQixNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBRTlDLE9BQU8sQ0FDTCxNQUFNLE9BQU8sQ0FBQyxHQUFHLENBQ2YsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsRUFBRSxFQUFFLENBQ3RCLDhCQUFhLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUNuRCxDQUNGLENBQ0YsQ0FBQyxHQUFHLENBQUMsQ0FBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUMzRSxDQUFDO0NBQUE7QUFiRCxvQ0FhQztBQUVELFNBQXNCLEdBQUcsQ0FBQyxPQUFnQjs7UUFDeEMsTUFBTSxnQkFBZ0IsR0FBRyxjQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsd0JBQVksQ0FBQyxDQUFDO1FBQy9ELE1BQU0sUUFBUSxHQUFHLG9EQUF1QixDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFFM0QsTUFBTSxTQUFTLEdBQUcsQ0FBQyxNQUFNLFlBQVksQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQzthQUN0RSxHQUFHLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxBQUFELEVBQUcsT0FBTyxDQUFDLEVBQUUsRUFBRSxDQUFDLEdBQUcsS0FBSyxLQUFLLE9BQU8sRUFBRSxDQUFDO2FBQ25ELElBQUksQ0FBQyxZQUFFLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFaEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN6QixDQUFDO0NBQUE7QUFURCxrQkFTQyJ9