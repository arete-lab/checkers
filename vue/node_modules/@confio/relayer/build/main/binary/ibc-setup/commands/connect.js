"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.run = exports.connect = void 0;
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const js_yaml_1 = __importDefault(require("js-yaml"));
const link_1 = require("../../../lib/link");
const constants_1 = require("../../constants");
const load_and_validate_app_1 = require("../../utils/load-and-validate-app");
const load_and_validate_registry_1 = require("../../utils/load-and-validate-registry");
const resolve_option_1 = require("../../utils/options/resolve-option");
const resolve_home_option_1 = require("../../utils/options/shared/resolve-home-option");
const resolve_key_file_option_1 = require("../../utils/options/shared/resolve-key-file-option");
const resolve_mnemonic_option_1 = require("../../utils/options/shared/resolve-mnemonic-option");
const signing_client_1 = require("../../utils/signing-client");
async function connect(flags, logger) {
    const home = resolve_home_option_1.resolveHomeOption({ homeFlag: flags.home });
    const app = load_and_validate_app_1.loadAndValidateApp(home);
    if (!app) {
        throw new Error(`${constants_1.appFile} not found at ${home}`);
    }
    const keyFile = resolve_key_file_option_1.resolveKeyFileOption({ keyFileFlag: flags.keyFile, app });
    const mnemonic = await resolve_mnemonic_option_1.resolveMnemonicOption({
        interactiveFlag: flags.interactive,
        mnemonicFlag: flags.mnemonic,
        keyFile: keyFile,
        app,
    });
    const src = resolve_option_1.resolveOption('src', { required: true })(flags.src, app === null || app === void 0 ? void 0 : app.src, process.env.RELAYER_SRC);
    const dest = resolve_option_1.resolveOption('dest', { required: true })(flags.dest, app === null || app === void 0 ? void 0 : app.dest, process.env.RELAYER_DEST);
    const options = {
        home,
        mnemonic,
        src,
        dest,
    };
    await run(options, app, logger);
}
exports.connect = connect;
async function run(options, app, logger) {
    const registryFilePath = path_1.default.join(options.home, constants_1.registryFile);
    const registry = load_and_validate_registry_1.loadAndValidateRegistry(registryFilePath);
    const srcChain = registry.chains[options.src];
    if (!srcChain) {
        throw new Error(`src channel  "${options.src}" not found in registry`);
    }
    const destChain = registry.chains[options.dest];
    if (!destChain) {
        throw new Error(`dest channel  "${options.dest}" not found in registry`);
    }
    const nodeA = await signing_client_1.signingClient(srcChain, options.mnemonic);
    const nodeB = await signing_client_1.signingClient(destChain, options.mnemonic);
    const link = await link_1.Link.createWithNewConnections(nodeA, nodeB);
    const appYaml = js_yaml_1.default.dump(Object.assign(Object.assign({}, app), { srcConnection: link.endA.connectionID, destConnection: link.endB.connectionID }), {
        lineWidth: 1000,
    });
    fs_1.default.writeFileSync(path_1.default.join(options.home, constants_1.appFile), appYaml, {
        encoding: 'utf-8',
    });
    logger.info(`Created connections ${link.endA.connectionID} (${link.endA.clientID}) <=> ${link.endB.connectionID} (${link.endB.clientID})`);
}
exports.run = run;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29ubmVjdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9iaW5hcnkvaWJjLXNldHVwL2NvbW1hbmRzL2Nvbm5lY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsNENBQW9CO0FBQ3BCLGdEQUF3QjtBQUV4QixzREFBMkI7QUFHM0IsNENBQXlDO0FBQ3pDLCtDQUF3RDtBQUV4RCw2RUFBdUU7QUFDdkUsdUZBQWlGO0FBQ2pGLHVFQUFtRTtBQUNuRSx3RkFBbUY7QUFDbkYsZ0dBQTBGO0FBQzFGLGdHQUEyRjtBQUMzRiwrREFBMkQ7QUFrQnBELEtBQUssVUFBVSxPQUFPLENBQUMsS0FBWSxFQUFFLE1BQWM7SUFDeEQsTUFBTSxJQUFJLEdBQUcsdUNBQWlCLENBQUMsRUFBRSxRQUFRLEVBQUUsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekQsTUFBTSxHQUFHLEdBQUcsMENBQWtCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDckMsSUFBSSxDQUFDLEdBQUcsRUFBRTtRQUNSLE1BQU0sSUFBSSxLQUFLLENBQUMsR0FBRyxtQkFBTyxpQkFBaUIsSUFBSSxFQUFFLENBQUMsQ0FBQztLQUNwRDtJQUVELE1BQU0sT0FBTyxHQUFHLDhDQUFvQixDQUFDLEVBQUUsV0FBVyxFQUFFLEtBQUssQ0FBQyxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQztJQUMxRSxNQUFNLFFBQVEsR0FBRyxNQUFNLCtDQUFxQixDQUFDO1FBQzNDLGVBQWUsRUFBRSxLQUFLLENBQUMsV0FBVztRQUNsQyxZQUFZLEVBQUUsS0FBSyxDQUFDLFFBQVE7UUFDNUIsT0FBTyxFQUFFLE9BQU87UUFDaEIsR0FBRztLQUNKLENBQUMsQ0FBQztJQUNILE1BQU0sR0FBRyxHQUFHLDhCQUFhLENBQUMsS0FBSyxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDLENBQ2xELEtBQUssQ0FBQyxHQUFHLEVBQ1QsR0FB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