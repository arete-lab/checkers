#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.program = void 0;
const commander_1 = require("commander");
const commander_options_1 = require("../commander-options");
const logger_with_error_boundary_1 = require("../utils/logger-with-error-boundary");
const balances_1 = require("./commands/balances");
const channels_1 = require("./commands/channels");
const connect_1 = require("./commands/connect");
const connections_1 = require("./commands/connections");
const ics20_1 = require("./commands/ics20");
const init_1 = require("./commands/init");
const keys_generate_1 = require("./commands/keys-generate");
const keys_list_1 = require("./commands/keys-list");
exports.program = new commander_1.Command();
// TODO: fill options and commands descriptions
exports.program.description('ibc-setup program description');
const initCommand = exports.program
    .command('init')
    .description('init command description')
    .addOption(commander_options_1.homeOption)
    .addOption(commander_options_1.srcOption)
    .addOption(commander_options_1.destOption)
    .action(logger_with_error_boundary_1.loggerWithErrorBoundary(init_1.init));
commander_options_1.addLoggerOptionsTo(initCommand);
const ics20Command = exports.program
    .command('ics20')
    .description('ics20 command description')
    .addOption(commander_options_1.srcOption)
    .addOption(commander_options_1.destOption)
    .addOption(commander_options_1.mnemonicOption)
    .option('--src-port <port>')
    .option('--dest-port <port>')
    .action(logger_with_error_boundary_1.loggerWithErrorBoundary(ics20_1.ics20));
commander_options_1.addLoggerOptionsTo(ics20Command);
const keys = exports.program.command('keys');
const keysGenerateCommand = keys
    .command('generate')
    .description('keys generate command description')
    .addOption(commander_options_1.keyFileOption)
    .action(logger_with_error_boundary_1.loggerWithErrorBoundary(keys_generate_1.keysGenerate));
commander_options_1.addLoggerOptionsTo(keysGenerateCommand);
const keysListCommand = keys
    .command('list')
    .description('keys list command description')
    .addOption(commander_options_1.homeOption)
    .addOption(commander_options_1.mnemonicOption)
    .addOption(commander_options_1.keyFileOption)
    .addOption(commander_options_1.interactiveOption)
    .action(logger_with_error_boundary_1.loggerWithErrorBoundary(keys_list_1.keysList));
commander_options_1.addLoggerOptionsTo(keysListCommand);
const balancesCommand = exports.program
    .command('balances')
    .description('balances command description')
    .addOption(commander_options_1.homeOption)
    .addOption(commander_options_1.mnemonicOption)
    .addOption(commander_options_1.keyFileOption)
    .addOption(commander_options_1.interactiveOption)
    .action(logger_with_error_boundary_1.loggerWithErrorBoundary(balances_1.balances));
commander_options_1.addLoggerOptionsTo(balancesCommand);
const connectCommand = exports.program
    .command('connect')
    .description('connect command description')
    .addOption(commander_options_1.srcOption)
    .addOption(commander_options_1.destOption)
    .addOption(commander_options_1.homeOption)
    .addOption(commander_options_1.mnemonicOption)
    .addOption(commander_options_1.keyFileOption)
    .addOption(commander_options_1.interactiveOption)
    .action(logger_with_error_boundary_1.loggerWithErrorBoundary(connect_1.connect));
commander_options_1.addLoggerOptionsTo(connectCommand);
const channelsCommand = exports.program
    .command('channels')
    .description('channels command description')
    .addOption(commander_options_1.homeOption)
    .addOption(commander_options_1.mnemonicOption)
    .addOption(commander_options_1.interactiveOption)
    .addOption(commander_options_1.chainOption)
    .option('--port <port>')
    .action(logger_with_error_boundary_1.loggerWithErrorBoundary(channels_1.channels));
commander_options_1.addLoggerOptionsTo(channelsCommand);
const connectionsCommand = exports.program
    .command('connections')
    .description('connections command description')
    .addOption(commander_options_1.homeOption)
    .addOption(commander_options_1.mnemonicOption)
    .addOption(commander_options_1.interactiveOption)
    .addOption(commander_options_1.chainOption)
    .action(logger_with_error_boundary_1.loggerWithErrorBoundary(connections_1.connections));
commander_options_1.addLoggerOptionsTo(connectionsCommand);
exports.program.parse(process.argv);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvYmluYXJ5L2liYy1zZXR1cC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEseUNBQW9DO0FBRXBDLDREQVM4QjtBQUM5QixvRkFBOEU7QUFFOUUsa0RBQStDO0FBQy9DLGtEQUErQztBQUMvQyxnREFBNkM7QUFDN0Msd0RBQXFEO0FBQ3JELDRDQUF5QztBQUN6QywwQ0FBdUM7QUFDdkMsNERBQXdEO0FBQ3hELG9EQUFnRDtBQUVuQyxRQUFBLE9BQU8sR0FBRyxJQUFJLG1CQUFPLEVBQUUsQ0FBQztBQUVyQywrQ0FBK0M7QUFDL0MsZUFBTyxDQUFDLFdBQVcsQ0FBQywrQkFBK0IsQ0FBQyxDQUFDO0FBRXJELE1BQU0sV0FBVyxHQUFHLGVBQU87S0FDeEIsT0FBTyxDQUFDLE1BQU0sQ0FBQztLQUNmLFdBQVcsQ0FBQywwQkFBMEIsQ0FBQztLQUN2QyxTQUFTLENBQUMsOEJBQVUsQ0FBQztLQUNyQixTQUFTLENBQUMsNkJBQVMsQ0FBQztLQUNwQixTQUFTLENBQUMsOEJBQVUsQ0FBQztLQUNyQixNQUFNLENBQUMsb0RBQXVCLENBQUMsV0FBSSxDQUFDLENBQUMsQ0FBQztBQUN6QyxzQ0FBa0IsQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUVoQyxNQUFNLFlBQVksR0FBRyxlQUFPO0tBQ3pCLE9BQU8sQ0FBQyxPQUFPLENBQUM7S0FDaEIsV0FBVyxDQUFDLDJCQUEyQixDQUFDO0tBQ3hDLFNBQVMsQ0FBQyw2QkFBUyxDQUFDO0tBQ3BCLFNBQVMsQ0FBQyw4QkFBVSxDQUFDO0tBQ3JCLFNBQVMsQ0FBQyxrQ0FBYyxDQUFDO0tBQ3pCLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQztLQUMzQixNQUFNLENBQUMsb0JBQW9CLENBQUM7S0FDNUIsTUFBTSxDQUFDLG9EQUF1QixDQUFDLGFBQUssQ0FBQyxDQUFDLENBQUM7QUFDMUMsc0NBQWtCLENBQUMsWUFBWSxD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