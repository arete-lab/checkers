import { createLogger } from '../create-logger';
export function loggerWithErrorBoundary(command) {
    return async (flags) => {
        const logger = createLogger(flags);
        try {
            await command(flags, logger);
        }
        catch (error) {
            /*
             * TODO: polish error handling
             *
             * if (error instanceOf InvalidOptionError) {
             *  // do something else?
             * }
             */
            logger.error(error);
        }
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2VyLXdpdGgtZXJyb3ItYm91bmRhcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvYmluYXJ5L3V0aWxzL2xvZ2dlci13aXRoLWVycm9yLWJvdW5kYXJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUdoRCxNQUFNLFVBQVUsdUJBQXVCLENBQ3JDLE9BQW9EO0lBRXBELE9BQU8sS0FBSyxFQUFFLEtBQXNCLEVBQUUsRUFBRTtRQUN0QyxNQUFNLE1BQU0sR0FBRyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFbkMsSUFBSTtZQUNGLE1BQU0sT0FBTyxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztTQUM5QjtRQUFDLE9BQU8sS0FBSyxFQUFFO1lBQ2Q7Ozs7OztlQU1HO1lBRUgsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUNyQjtJQUNILENBQUMsQ0FBQztBQUNKLENBQUMifQ==