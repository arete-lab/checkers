import fs from 'fs';
import readline from 'readline';
import { resolveOption } from '../resolve-option';
async function readMnemonicFromStdin(interactive) {
    if (!interactive) {
        return null;
    }
    const readlineInterface = readline.createInterface({
        input: process.stdin,
        output: process.stdout,
    });
    const mnemonic = await new Promise((resolve, reject) => {
        const timeout = setTimeout(() => {
            reject(new Error('Timeout for entering mnemonic exceeded.'));
        }, 60 * 1000);
        readlineInterface.question('enter mnemonic phrase: ', (stdin) => {
            readlineInterface.close();
            clearTimeout(timeout);
            resolve(stdin);
        });
    });
    return mnemonic;
}
function readMnemonicFromFile(keyFile) {
    if (!keyFile) {
        return null;
    }
    return () => {
        return fs.readFileSync(keyFile, 'utf-8').trim();
    };
}
export async function resolveMnemonicOption({ interactiveFlag, keyFile, mnemonicFlag, app }, optional = false) {
    const args = [
        await readMnemonicFromStdin(interactiveFlag),
        mnemonicFlag,
        process.env.RELAYER_MNEMONIC,
        app?.mnemonic,
        readMnemonicFromFile(keyFile),
    ];
    if (!optional) {
        return resolveOption('mnemonic', { required: true })(...args);
    }
    return resolveOption('mnemonic')(...args);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzb2x2ZS1tbmVtb25pYy1vcHRpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvYmluYXJ5L3V0aWxzL29wdGlvbnMvc2hhcmVkL3Jlc29sdmUtbW5lbW9uaWMtb3B0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxNQUFNLElBQUksQ0FBQztBQUNwQixPQUFPLFFBQVEsTUFBTSxVQUFVLENBQUM7QUFHaEMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRWxELEtBQUssVUFBVSxxQkFBcUIsQ0FBQyxXQUFvQjtJQUN2RCxJQUFJLENBQUMsV0FBVyxFQUFFO1FBQ2hCLE9BQU8sSUFBSSxDQUFDO0tBQ2I7SUFFRCxNQUFNLGlCQUFpQixHQUFHLFFBQVEsQ0FBQyxlQUFlLENBQUM7UUFDakQsS0FBSyxFQUFFLE9BQU8sQ0FBQyxLQUFLO1FBQ3BCLE1BQU0sRUFBRSxPQUFPLENBQUMsTUFBTTtLQUN2QixDQUFDLENBQUM7SUFFSCxNQUFNLFFBQVEsR0FBRyxNQUFNLElBQUksT0FBTyxDQUFTLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFO1FBQzdELE1BQU0sT0FBTyxHQUFHLFVBQVUsQ0FBQyxHQUFHLEVBQUU7WUFDOUIsTUFBTSxDQUFDLElBQUksS0FBSyxDQUFDLHlDQUF5QyxDQUFDLENBQUMsQ0FBQztRQUMvRCxDQUFDLEVBQUUsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDO1FBRWQsaUJBQWlCLENBQUMsUUFBUSxDQUFDLHlCQUF5QixFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUU7WUFDOUQsaUJBQWlCLENBQUMsS0FBSyxFQUFFLENBQUM7WUFDMUIsWUFBWSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQ3RCLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNqQixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQyxDQUFDO0lBRUgsT0FBTyxRQUFRLENBQUM7QUFDbEIsQ0FBQztBQUVELFNBQVMsb0JBQW9CLENBQUMsT0FBc0I7SUFDbEQsSUFBSSxDQUFDLE9BQU8sRUFBRTtRQUNaLE9BQU8sSUFBSSxDQUFDO0tBQ2I7SUFFRCxPQUFPLEdBQUcsRUFBRTtRQUNWLE9BQU8sRUFBRSxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDbEQsQ0FBQyxDQUFDO0FBQ0osQ0FBQztBQW1CRCxNQUFNLENBQUMsS0FBSyxVQUFVLHFCQUFxQixDQUN6QyxFQUFFLGVBQWUsRUFBRSxPQUFPLEVBQUUsWUFBWSxFQUFFLEdBQUcsRUFBVSxFQUN2RCxRQUFRLEdBQUcsS0FBSztJQUVoQixNQUFNLElBQUksR0FBRztRQUNYLE1BQU0scUJBQXFCLENBQUMsZUFBZSxDQUFDO1FBQzVDLFlBQVk7UUFDWixPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQjtRQUM1QixHQUFHLEVBQUUsUUFBUTtRQUNiLG9CQUFvQixDQUFDLE9BQU8sQ0FBQztLQUM5QixDQUFDO0lBRUYsSUFBSSxDQUFDLFFBQVEsRUFBRTtRQUNiLE9BQU8sYUFBYSxDQUFDLFVBQVUsRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7S0FDL0Q7SUFFRCxPQUFPLGFBQWEsQ0FBQyxVQUFVLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO0FBQzVDLENBQUMifQ==