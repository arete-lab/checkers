import { Plugin } from 'vite';
import { FileExistStat, BaseOptions } from './utils';
export interface DynamicImportOptions extends BaseOptions {
    onmessage?: (type: MessageType, message: string | Error) => void;
}
export declare function dynamicImport(options?: DynamicImportOptions): Plugin;
export declare type AcornNode = acorn.Node & Record<string, any>;
export declare type MessageType = 'error' | 'warn' | 'info';
export interface ImportRecord {
    /** origin import code */
    importRawArgument: string;
    /** possible alias prefix */
    aliasGlob: string;
    glob: string;
    /** enhance glob */
    glob2: string;
    filepath: string;
    realFile: string;
    isDirectory: boolean;
    fileStat: null | FileExistStat;
    expland?: boolean;
    id: string;
}
export interface ReplaceImportRecord {
    node: AcornNode;
    repleaceImport: string;
    importVars: ImportVars;
}
export interface ImportVars {
    name: string;
    func: string;
}
