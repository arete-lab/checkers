export declare const DEFAULT_EXTENSIONS: string[];
export declare function isCommonjs(code: string): boolean;
/**
 * { vue: true, type: 'template', 'lang.js': true }
 * { vue: true, type: 'style', index: '0', 'lang.less': true }
 * { vue: true, type: 'style', index: '0', scoped: 'true', 'lang.css': true }
 */
export declare function parsePathQuery(querystring: string): Record<string, string | boolean>;
export interface FileExistOptions {
    exist?: boolean;
    /** 外部传入时，内部节查找时间 */
    isDirectory?: boolean;
    /** filepath 为相对路径时需要 cwd */
    cwd?: string;
    extensions?: string[];
}
export interface FileExistStat {
    ext: string;
    /**
     * tail === 'index' + ext : 目录
     * tail === ext           : 缺少尾缀
     * tail === ''            : filename 存在
     */
    tail: string;
    filename: string;
}
/**
 * 依次根据文件尾缀检测文件是否存在
 * @param filepath 绝对路径，或相对路径；相对路径时需要 cwd
 * @param options FileExistOptions
 * @returns FileExistStat | void
 */
export declare function detectFileExist(filepath: string, options?: FileExistOptions): FileExistStat | void;
export declare namespace detectFileExist {
    var join: (filepath: string, stat: FileExistStat) => string;
}
/**
 * Console log
 * @param arg0
 */
export declare const message: {
    info(arg0: {
        plugin: string;
        error: string;
        filename: string;
    }): void;
};
export interface BaseOptions {
    extensions?: string[];
    catch?: (error: Error, ext: {
        filename: string;
        [k: string]: any;
    }) => void;
}
